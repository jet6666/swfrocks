#include <hxcpp.h>

namespace hx {
const char *__hxcpp_all_files[] = {
#ifdef HXCPP_DEBUGGER
"C:\\HaxeToolkit\\haxe\\std/StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/Lib.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/EReg.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Std.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/Type.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/ds/StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/zip/Compress.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/haxe/zip/Uncompress.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/File.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std/cpp/_std/sys/io/FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/Log.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesInput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/BytesOutput.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Eof.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Input.hx",
"C:\\HaxeToolkit\\haxe\\std/haxe/io/Output.hx",
"Main.hx",
"format/abc/Data.hx",
"format/abc/OpReader.hx",
"format/abc/OpWriter.hx",
"format/abc/Reader.hx",
"format/abc/Writer.hx",
"format/swf/Data.hx",
"format/swf/Reader.hx",
"format/swf/Tools.hx",
"format/swf/Writer.hx",
"format/tools/BitsInput.hx",
"format/tools/BitsOutput.hx",
"format/tools/Deflate.hx",
"format/tools/Inflate.hx",
#endif
 0 };

const char *__hxcpp_all_files_fullpath[] = {
#ifdef HXCPP_DEBUGGER
"C:\\HaxeToolkit\\haxe\\std\\StringTools.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\Lib.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\EReg.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Std.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\StringBuf.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\Type.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\ds\\StringMap.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\zip\\Compress.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\haxe\\zip\\Uncompress.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\File.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileInput.hx",
"C:\\HaxeToolkit\\haxe\\std\\cpp\\_std\\sys\\io\\FileOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\Log.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Bytes.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesBuffer.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesInput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\BytesOutput.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Eof.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Input.hx",
"C:\\HaxeToolkit\\haxe\\std\\haxe\\io\\Output.hx",
"C:\\openfl\\swfRocks\\src\\Main.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\abc\\Data.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\abc\\OpReader.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\abc\\OpWriter.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\abc\\Reader.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\abc\\Writer.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\swf\\Data.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\swf\\Reader.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\swf\\Tools.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\swf\\Writer.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\tools\\BitsInput.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\tools\\BitsOutput.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\tools\\Deflate.hx",
"C:\\HaxeToolkit\\haxe\\lib\\format\\3,0,5\\format\\tools\\Inflate.hx",
#endif
 0 };

const char *__hxcpp_all_classes[] = {
#ifdef HXCPP_DEBUGGER
"cpp.Lib",
"EReg",
"Main",
"Std",
"StringBuf",
"StringTools",
"Type",
"format.abc.ABCData",
"format.abc.OpReader",
"format.abc.OpWriter",
"format.abc.Reader",
"format.abc.Writer",
"format.swf.TagId",
"format.swf.FillStyleTypeId",
"format.swf.PlaceObject",
"format.swf.Reader",
"format.swf.Tools",
"format.swf.Writer",
"format.tools.BitsInput",
"format.tools.BitsOutput",
"format.tools.Deflate",
"format.tools.Inflate",
"haxe.Log",
"haxe.ds.StringMap",
"haxe.io.Bytes",
"haxe.io.BytesBuffer",
"haxe.io.Input",
"haxe.io.BytesInput",
"haxe.io.Output",
"haxe.io.BytesOutput",
"haxe.io.Eof",
"haxe.zip.Compress",
"haxe.zip.Uncompress",
"sys.io.File",
"sys.io.FileInput",
"sys.io.FileOutput",
#endif
 0 };
} // namespace hx
void __files__boot() { __hxcpp_set_debugger_info(hx::__hxcpp_all_classes, hx::__hxcpp_all_files_fullpath); }
